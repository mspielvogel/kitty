# Nightfox colors for Kitty
## name: nordfox
## upstream: https://github.com/edeneast/nightfox.nvim/raw/main/extra/nordfox/nightfox_kitty.conf

# background #2e3440
# foreground #cdcecf
# selection_background #3e4a5b
# selection_foreground #cdcecf
# url_color #a3be8c

# Cursor
# uncomment for reverse background
# cursor none
cursor #cdcecf

# Border
active_border_color #81a1c1
inactive_border_color #5a657d
bell_border_color #c9826b

# Tabs
active_tab_background #81a1c1
active_tab_foreground #232831
inactive_tab_background #3e4a5b
inactive_tab_foreground #60728a

# normal
color0 #3b4252
color1 #bf616a
color2 #a3be8c
color3 #ebcb8b
color4 #81a1c1
color5 #b48ead
color6 #88c0d0
color7 #e5e9f0

# bright
color8 #465780
color9 #d06f79
color10 #b1d196
color11 #f0d399
color12 #8cafd2
color13 #c895bf
color14 #93ccdc
color15 #e7ecf4

# extended colors
color16 #c9826b
color17 #bf88bc

# Nightfox colors for Kitty
## name: nightfox
## upstream: https://github.com/edeneast/nightfox.nvim/raw/main/extra/nightfox/nightfox_kitty.conf

background #192330
foreground #cdcecf
selection_background #2b3b51
selection_foreground #cdcecf
url_color #81b29a

# Cursor
# uncomment for reverse background
# cursor none
cursor #cdcecf

# Border
active_border_color #719cd6
inactive_border_color #39506d
bell_border_color #f4a261

# Tabs
active_tab_background #719cd6
active_tab_foreground #131a24
inactive_tab_background #2b3b51
inactive_tab_foreground #738091

# normal
color0 #393b44
color1 #c94f6d
color2 #81b29a
color3 #dbc074
color4 #719cd6
color5 #9d79d6
color6 #63cdcf
color7 #dfdfe0

# bright
color8 #575860
color9 #d16983
color10 #8ebaa4
color11 #e0c989
color12 #86abdc
color13 #baa1e2
color14 #7ad4d6
color15 #e4e4e5

# extended colors
color16 #f4a261
color17 #d67ad2

######### nightfox end

######### tokyonight

# vim:ft=kitty

## name: Tokyo Night Storm
## license: MIT
## author: Folke Lemaitre
## upstream: https://github.com/folke/tokyonight.nvim/raw/main/extras/kitty_tokyonight_storm.conf


background #24283b
foreground #c0caf5
selection_background #364A82
selection_foreground #c0caf5
url_color #73daca
cursor #c0caf5

# Tabs
active_tab_background #7aa2f7
active_tab_foreground #1f2335
inactive_tab_background #292e42
inactive_tab_foreground #545c7e
#tab_bar_background #1D202F

# normal
color0 #1D202F
color1 #f7768e
color2 #9ece6a
color3 #e0af68
color4 #7aa2f7
color5 #bb9af7
color6 #7dcfff
color7 #a9b1d6

# bright
color8 #414868
color9 #f7768e
color10 #9ece6a
color11 #e0af68
color12 #7aa2f7
color13 #bb9af7
color14 #7dcfff
color15 #c0caf5

# extended colors
color16 #ff9e64
color17 #db4b4b

##################### tokyonight end

# Mouse & cursor
cursor_blink_interval    1 
cursor_stop_blinking_after 15.0

scrollback_lines 5000
scrollback_pager less +G -R
# scrollback_in_new_tab no

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel). Use negative
# numbers to change scroll direction.
wheel_scroll_multiplier 3.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

#Select for double clicking
select_by_word_characters :@-./_~?&=%+#

#don't care, use i3.
focus_follows_mouse yes
remember_window_size   no
enabled_layouts *
initial_window_width   640
initial_window_height  400

# 10 yields ~100 FPS which is more than sufficient for most uses.
repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed.
input_delay 3

#bell
visual_bell_duration 0.1
enable_audio_bell no

# The modifier keys to press when clicking with the mouse on URLs to open the URL
# open_url_modifiers ctrl
open_url_with default

# Choose whether to use the system implementation of wcwidth() (used to
# control how many cells a character is rendered in).  If you use the system
# implementation, then kitty and any programs running in it will agree. The
# problem is that system implementations often are based on outdated unicod e
# standards and get the width of many characters, such as emoji, wrong. So if
# you are using kitty with programs that have their own up-to-date wcwidth()
# implementation, set this option to no.
# use_system_wcwidth yes

# The value of the TERM environment variable to set
term kitty

#window decorations
window_border_width 0
window_padding_width 10
active_border_color #00ff00
inactive_border_color #cccccc

# Tab-bar colors
active_tab_foreground #000
active_tab_background #eee
inactive_tab_foreground #444
inactive_tab_background #999


# Key mappings

# Clipboard
map ctrl+shift+v        paste_from_clipboard
map ctrl+shift+s        paste_from_selection
map ctrl+shift+c        copy_to_clipboard

# Scrolling
map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
# map ctrl+shift+k         scroll_line_up
# map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map ctrl+shift+enter    new_window
map ctrl+shift+e        launch --cwd=current
map ctrl+shift+o        launch --cwd current --location=hsplit
map ctrl+shift+w        close_window
map ctrl+shift+l        next_window
map ctrl+shift+h        previous_window
map ctrl+shift+f        move_window_forward
map ctrl+shift+b        move_window_backward
map ctrl+shift+`        move_window_to_top
map ctrl+shift+1        first_window
map ctrl+shift+2        second_window
map ctrl+shift+3        third_window
map ctrl+shift+4        fourth_window
map ctrl+shift+5        fifth_window
map ctrl+shift+6        sixth_window
map ctrl+shift+7        seventh_window
map ctrl+shift+8        eighth_window
map ctrl+shift+9        ninth_window
map ctrl+shift+0        tenth_window
map ctrl+left resize_window narrower
map ctrl+right resize_window wider
map ctrl+up resize_window taller
map ctrl+down resize_window shorter 3
# reset all windows in the tab to default sizes
# map ctrl+home resize_window reset
# map ctrl+shift+z        toggle_layout stack
# map ctrl+shift+z goto_layout stack if current_layout() != 'stack' else last_layout
map ctrl+shift+z goto_layout stack
map ctrl+shift+alt+h goto_layout horizontal
map ctrl+shift+x goto_layout last_layout
map ctrl+shift+x goto_layout last_used_layout

# Switch focus to the neighboring window in the indicated direction
# map ctrl+left neighboring_window left
# map ctrl+right neighboring_window right
map ctrl+shift+k neighboring_window up
map ctrl+shift+j neighboring_window down
# map ctrl+shit+alt+z toggle_layout stack
# You can also open a new window running an arbitrary program, for example:
# map ctrl+shift+y      new_window mutt
# You can also pas the current selection to the new program by using the @selection placeholder
# map ctrl+shift+y      new_window less @selection
# Finally, you can even send the contents of the current screen + history buffer as stdin using
# the placeholders @text (which is the plain text) and @ansi (which includes text styling escape codes)
# For example, the following command opens the scrollback buffer in less in a new window.
# map ctrl+shift+y      new_window @ansi less +G -R


# Tab management
# tabbar should be at the top
tab_bar_edge top
tab_bar_style separator
tab_separator " â”‡"
map ctrl+shift+right    next_tab
map ctrl+alt+l        next_tab
map ctrl+shift+left     previous_tab
map ctrl+alt+h        previous_tab
map ctrl+shift+t        new_tab
map ctrl+shift+q        close_tab
map ctrl+shift+alt+l    next_layout
map ctrl+shift+.        move_tab_forward
map ctrl+shift+,        move_tab_backward
map ctrl+alt+1          goto_tab 1
map ctrl+alt+2          goto_tab 2
map ctrl+alt+3          goto_tab 3
map ctrl+alt+4          goto_tab 4
map ctrl+alt+5          goto_tab 5
map ctrl+alt+6          goto_tab 6
map ctrl+alt+7          goto_tab 7
map ctrl+alt+8          goto_tab 8
map ctrl+alt+9          goto_tab 9
map ctrl+alt+0          goto_tab 10

# Just as with new_window above, you can also pass the name of arbitrary
# commands to run when using new_tab.

# Miscellaneous
# map ctrl+plus    increase_font_size  # was ctrl+equal before
map ctrl+minus    decrease_font_size
map ctrl+0 restore_font_size
map ctrl+f11      toggle_fullscreens

# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
# map ctrl+shift+e launch --location=hsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
# map ctrl+shift+o launch --location=vsplit

font_family      Fira Code
